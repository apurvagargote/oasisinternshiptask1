package task1;
import java.util.ArrayList;
import java.util.Scanner;


class Account {
    private String userId;
    private String pin;
    private double balance;
    private ArrayList<String> transactionHistory;

    public Account(String userId, String pin, double initialBalance) {
        this.userId = userId;
        this.pin = pin;
        this.balance = initialBalance;
        this.transactionHistory = new ArrayList<>();
    }

    public String getUserId() {
        return userId;
    }

    public boolean validatePin(String enteredPin) {
        return pin.equals(enteredPin);
    }

    public double getBalance() {
        return balance;
    }

    public void deposit(double amount) {
        balance += amount;
        transactionHistory.add("Deposit: +" + amount);
    }

    public void withdraw(double amount) {
        if (amount <= balance) {
            balance -= amount;
            transactionHistory.add("Withdrawal: -" + amount);
        } else {
            System.out.println("Insufficient funds.");
        }
    }

    public void transfer(Account recipient, double amount) {
        if (amount <= balance) {
            balance -= amount;
            recipient.deposit(amount);
            transactionHistory.add("Transfer to " + recipient.getUserId() + ": -" + amount);
        } else {
            System.out.println("Insufficient funds.");
        }
    }

    public ArrayList<String> getTransactionHistory() {
        return transactionHistory;
    }
}

// Class representing the ATM
public class ATM {
    private static Scanner scanner = new Scanner(System.in);

    public static void main(String[] args) {
        // Create two sample accounts
        Account account1 = new Account("user1", "1234", 1000.0);
        Account account2 = new Account("user2", "5678", 500.0);

        // ATM initialization
        System.out.println("Welcome to the ATM!");

        // User authentication
        System.out.print("Enter user ID: ");
        String userId = scanner.nextLine();
        System.out.print("Enter PIN: ");
        String pin = scanner.nextLine();

        Account currentAccount = null;

        if (userId.equals(account1.getUserId()) && account1.validatePin(pin)) {
            currentAccount = account1;
        } else if (userId.equals(account2.getUserId()) && account2.validatePin(pin)) {
            currentAccount = account2;
        } else {
            System.out.println("Invalid user ID or PIN. Exiting...");
            System.exit(0);
        }

        // Main menu
        while (true) {
            System.out.println("\nMain Menu:");
            System.out.println("1. Transactions History");
            System.out.println("2. Withdraw");
            System.out.println("3. Deposit");
            System.out.println("4. Transfer");
            System.out.println("5. Quit");

            System.out.print("Enter your choice: ");
            int choice = scanner.nextInt();

            switch (choice) {
                case 1:
                    displayTransactionHistory(currentAccount);
                    break;
                case 2:
                    withdrawMoney(currentAccount);
                    break;
                case 3:
                    depositMoney(currentAccount);
                    break;
                case 4:
                    transferMoney(currentAccount, account1, account2);
                    break;
                case 5:
                    System.out.println("Thank you for using the ATM. Goodbye!");
                    System.exit(0);
                default:
                    System.out.println("Invalid choice. Please try again.");
            }
        }
    }

    private static void displayTransactionHistory(Account account) {
        System.out.println("\nTransaction History:");
        for (String transaction : account.getTransactionHistory()) {
            System.out.println(transaction);
        }
    }

    private static void withdrawMoney(Account account) {
        System.out.print("Enter the amount to withdraw: ");
        double amount = scanner.nextDouble();
        account.withdraw(amount);
    }

    private static void depositMoney(Account account){
        System.out.print("Enter the amount to deposit: ");
        double amount = scanner.nextDouble();
        account.deposit(amount);
    }

    private static void transferMoney(Account currentAccount, Account account1, Account account2) {
        System.out.print("Enter the recipient's user ID: ");
        String recipientUserId = scanner.next();

        Account recipientAccount = (recipientUserId.equals(account1.getUserId())) ? account1 : account2;

        System.out.print("Enter the amount to transfer: ");
        double amount = scanner.nextDouble();

        currentAccount.transfer(recipientAccount, amount);
    }
}
